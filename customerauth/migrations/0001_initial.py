# Generated by Django 5.1.2 on 2024-11-02 17:58

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("products", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AddressType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="ContactUs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=200)),
                ("email", models.CharField(max_length=200)),
                ("phone", models.CharField(max_length=255)),
                ("subject", models.CharField(max_length=200)),
                ("message", models.TextField()),
            ],
            options={
                "verbose_name": "Contact Us",
                "verbose_name_plural": "Contact Us",
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Ülke Adı")),
                ("code", models.CharField(max_length=3, verbose_name="Ülke Kodu")),
            ],
            options={
                "verbose_name": "Ülke",
                "verbose_name_plural": "Ülkeler",
            },
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "city_id",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        unique=True,
                        verbose_name="Şehir ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Şehir Adı")),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cities",
                        to="customerauth.country",
                        verbose_name="Ülke",
                    ),
                ),
            ],
            options={
                "verbose_name": "Şehir",
                "verbose_name_plural": "Şehirler",
            },
        ),
        migrations.CreateModel(
            name="District",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "district_id",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        unique=True,
                        verbose_name="İlçe ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="İlçe Adı")),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Posta Kodu"
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="districts",
                        to="customerauth.city",
                        to_field="city_id",
                        verbose_name="Şehir",
                    ),
                ),
            ],
            options={
                "verbose_name": "İlçe",
                "verbose_name_plural": "İlçeler",
            },
        ),
        migrations.CreateModel(
            name="Neighborhood",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "neighborhood_id",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        unique=True,
                        verbose_name="İlçe ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Mahalle Adı")),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Posta Kodu"
                    ),
                ),
                (
                    "district",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="neighborhood",
                        to="customerauth.district",
                        to_field="district_id",
                        verbose_name="İlçe",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mahalle",
                "verbose_name_plural": "Mahalleler",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_adress", models.TextField(verbose_name="Sipariş Adresi")),
                ("billing_adress", models.TextField(verbose_name="Fatura Adresi")),
                ("order_details", models.TextField(verbose_name="Sipariş Detayları")),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Toplam Miktar"
                    ),
                ),
                (
                    "order_number",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Sipariş Numarası"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Completed", "Completed"),
                            ("Cancelled", "Cancelled"),
                        ],
                        default="Pending",
                        max_length=20,
                        verbose_name="Durum",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Güncelleme Tarihi"
                    ),
                ),
                (
                    "billing_document",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="billing_documents/",
                        verbose_name="Fatura Belgesi",
                    ),
                ),
                (
                    "order_cancel_reason",
                    models.TextField(
                        blank=True, null=True, verbose_name="Sipariş İptal Nedeni"
                    ),
                ),
                (
                    "order_cancel_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Sipariş İptal Tarihi"
                    ),
                ),
                (
                    "order_pdf_document",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="order_pdf_documents/",
                        verbose_name="Sipariş PDF Belgesi",
                    ),
                ),
                (
                    "payment_id",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Ödeme ID"
                    ),
                ),
                (
                    "payment_transaction_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Ödeme İşlem ID",
                    ),
                ),
                (
                    "order_city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="order_city_orders",
                        to="customerauth.city",
                        to_field="city_id",
                    ),
                ),
                (
                    "order_neighborhood",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="order_neighborhood_orders",
                        to="customerauth.neighborhood",
                        to_field="neighborhood_id",
                    ),
                ),
                (
                    "order_region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="order_region_orders",
                        to="customerauth.district",
                        to_field="district_id",
                    ),
                ),
            ],
            options={
                "verbose_name": "Siparişler",
                "verbose_name_plural": "Siparişler",
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(verbose_name="Miktar")),
                (
                    "rental_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Kiralama Fiyatı",
                    ),
                ),
                (
                    "selling_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Satış Fiyatı",
                    ),
                ),
                (
                    "is_rental",
                    models.BooleanField(default=False, verbose_name="Kiralık mı"),
                ),
                (
                    "rental_period",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("1", "1"),
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                            ("6", "6"),
                            ("7", "7"),
                            ("8", "8"),
                            ("9", "9"),
                            ("10", "10"),
                            ("11", "11"),
                            ("12", "12"),
                            ("13", "13"),
                            ("14", "14"),
                            ("15", "15"),
                            ("16", "16"),
                            ("17", "17"),
                            ("18", "18"),
                            ("19", "19"),
                            ("20", "20"),
                            ("21", "21"),
                            ("22", "22"),
                            ("23", "23"),
                            ("24", "24"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Kiralama Dönemi",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Oluşturulma Tarihi",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Güncelleme Tarihi"
                    ),
                ),
                (
                    "expired_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Son Kullanma Tarihi"
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="customerauth.order",
                        verbose_name="Sipariş",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.product",
                        verbose_name="Ürün",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sipariş Kalemleri",
                "verbose_name_plural": "Sipariş Kalemleri",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("username", models.CharField(max_length=100)),
                ("my_style", models.BooleanField(default=False)),
                ("phone", models.CharField(blank=True, max_length=15, null=True)),
                ("verified", models.BooleanField(default=False)),
                ("email_verified", models.BooleanField(default=False)),
                ("receive_email_notifications", models.BooleanField(default=True)),
                ("receive_sms_notifications", models.BooleanField(default=True)),
                (
                    "tckn",
                    models.CharField(blank=True, max_length=11, null=True, unique=True),
                ),
                ("birth_date", models.DateField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="customerauth_groups",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="customerauth_user_permissions",
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="TempOrderCityData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order_number",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Sipariş Numarası"
                    ),
                ),
                (
                    "order_city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="temp_order_city_orders",
                        to="customerauth.city",
                        to_field="city_id",
                    ),
                ),
                (
                    "order_neighborhood",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="temp_order_neighborhood_orders",
                        to="customerauth.neighborhood",
                        to_field="neighborhood_id",
                    ),
                ),
                (
                    "order_region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="temp_order_region_orders",
                        to="customerauth.district",
                        to_field="district_id",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="customerauth.user",
                        verbose_name="Kullanıcı",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("status", models.CharField(max_length=50)),
                ("json_data", models.JSONField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="customerauth.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PasswordReset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("otp", models.CharField(max_length=6)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="customerauth.user",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="order",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="customerauth.user",
                verbose_name="Kullanıcı",
            ),
        ),
        migrations.CreateModel(
            name="MyStyles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "home_model",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.homemodel",
                    ),
                ),
                (
                    "home_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.hometype",
                    ),
                ),
                (
                    "room_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.roomtype",
                    ),
                ),
                (
                    "space_definition",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.spacedefinition",
                    ),
                ),
                (
                    "time_range",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.timerange",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="customerauth.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=255)),
                ("usersurname", models.CharField(max_length=255)),
                ("phone", models.CharField(max_length=255)),
                (
                    "address_name",
                    models.CharField(
                        help_text="Açıklayıcı bir ad (örn. Ev Adresi, İş Adresi)",
                        max_length=255,
                    ),
                ),
                ("address_line1", models.CharField(max_length=255)),
                ("postal_code", models.CharField(max_length=10)),
                ("is_default", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("firm_name", models.CharField(max_length=255)),
                ("firm_taxcode", models.CharField(max_length=255)),
                ("firm_tax_home", models.CharField(max_length=255)),
                ("delivery_addresses", models.BooleanField(default=False)),
                ("billing_addresses", models.BooleanField(default=False)),
                (
                    "address_type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="addresses",
                        to="customerauth.addresstype",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="customerauth.city",
                        to_field="city_id",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="customerauth.district",
                        to_field="district_id",
                    ),
                ),
                (
                    "neighborhood",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="customerauth.neighborhood",
                        to_field="neighborhood_id",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addresses",
                        to="customerauth.user",
                    ),
                ),
            ],
            options={
                "verbose_name": "Address",
                "verbose_name_plural": "Addresses",
            },
        ),
        migrations.CreateModel(
            name="wishlist_model",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="wishes",
                        to="products.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="customerauth.user",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "wishlists",
            },
        ),
        migrations.CreateModel(
            name="UserProductView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="customerauth.user",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("user", "product")},
            },
        ),
    ]
